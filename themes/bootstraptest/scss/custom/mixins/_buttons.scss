@mixin btn-styles($btn-color, $btn-states-color) {
  background-color: $btn-color;
  box-shadow: none;
  border-radius: 0;
  outline: none;

  &.animation-on-hover:hover {
    background-position: bottom left;
    transition: all $transition-duration $transition-timing-function;
  }

  &:hover,
  &:focus,
  &:active,
  &.active,
  &:active:focus,
  &:active:hover,
  &.active:focus,
  &.active:hover {
    background-color: $btn-states-color !important;
    color: $white;
    box-shadow: none;
  }

  &:active {
    box-shadow: none !important;
    // transform: translateY(0px) !important;
    transition: all ($transition-duration/2) $transition-timing-function;
  }

  &.btn-primary:not(:disabled):not(.disabled).active,
  &.btn-primary:not(:disabled):not(.disabled):active {
    color: $default-states;
    background: inherit;
    border: none;
  }
  
  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {

    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $btn-color;
      border-color: $btn-color;
    }
  }

  // btn-neutral style
  @if $btn-color==$white {
    color: $primary;

    &.btn-danger {
      color: $danger;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $danger-states;
      }
    }

    &.btn-info {
      color: $info;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $info-states;
      }
    }

    &.btn-warning {
      color: $warning;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $warning-states;
      }
    }

    &.btn-success {
      color: $success;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $success-states;
      }
    }

    &.btn-default {
      color: $default;

      &:hover,
      &:focus,
      &:active,
      &:active:focus {
        color: $default-states;
      }
    }

    &.active,
    &:active,
    &:active:focus,
    &:active:hover,
    &.active:focus,
    &.active:hover,
    .show>&.dropdown-toggle,
    .show>&.dropdown-toggle:focus,
    .show>&.dropdown-toggle:hover {
      background-color: $white;
      color: $primary-states;
      box-shadow: none;
    }

    &:hover,
    &:focus {
      color: $primary-states;

      &:not(.nav-link) {
        box-shadow: none;
      }

    }

  }

  @else {
    color: $white;
  }

  &.btn-simple {
    color: $btn-color;
    border-color: $btn-color;
    background: $transparent-bg;

    &:hover,
    &:focus,
    &:active,
    &:not(:disabled):not(.disabled):active {
      color: $btn-color;
      border-color: $secondary;
      background-color: $transparent-bg !important;
      box-shadow: none;

      svg {
        fill: $secondary;
      }
    }

    &.active {
      border-color: $btn-color !important;

      &:hover,
      &:focus,
      &:active,
      &:not(:disabled):not(.disabled):active {
        color: $white;
        border-color: $btn-color;
        background-color: $btn-states-color !important;
        box-shadow: none;
      }
    }

    svg {
      fill: $btn-color;
      transition: all $transition-duration $transition-timing-function;
    }
  }

  &.btn-link {
    color: $btn-color;

    &:hover,
    &:focus,
    &:active {
      background-color: $transparent-bg !important;
      color: $white !important;
      text-decoration: none;
      box-shadow: none;
    }
  }

  &.btn-icon {
    width: 42px;
    height: 42px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    padding: 0 !important;

    @include media-breakpoint-up(sm) {
      width: 52px;
      height: 52px;
    }

    svg {
      width: 60%;
      height: 60%;
    }
  }
}